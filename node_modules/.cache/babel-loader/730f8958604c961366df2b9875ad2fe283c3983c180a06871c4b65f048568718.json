{"ast":null,"code":"var _jsxFileName = \"/Users/hyeye_on/Desktop/kiki_project/src/components/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // 페이지 이동을 위한 Hook\nimport { login } from \"../services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login({\n  setToken\n}) {\n  _s();\n  const [loginId, setLoginId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate(); // React Router의 네비게이션 사용\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await login(loginId, password);\n      const token = response.data.token;\n      setToken(token); // 상위 컴포넌트(App.js) 상태 업데이트\n      localStorage.setItem(\"jwt\", token); // 토큰을 localStorage에 저장\n      alert(\"Login successful!\");\n      navigate(\"/main\"); // 메인 페이지로 이동\n    } catch (error) {\n      alert(\"Login failed! Please check your ID and Password.\");\n      console.error(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"ID\",\n      value: loginId,\n      onChange: e => setLoginId(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"3nmwjqg4YMoLoXAhMaKbizK/JIM=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","login","jsxDEV","_jsxDEV","Login","setToken","_s","loginId","setLoginId","password","setPassword","navigate","handleSubmit","e","preventDefault","response","token","data","localStorage","setItem","alert","error","console","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","_c","$RefreshReg$"],"sources":["/Users/hyeye_on/Desktop/kiki_project/src/components/Login.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // 페이지 이동을 위한 Hook\nimport { login } from \"../services/api\";\n\nfunction Login({ setToken }) {\n  const [loginId, setLoginId] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate(); // React Router의 네비게이션 사용\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await login(loginId, password);\n      const token = response.data.token;\n\n      setToken(token); // 상위 컴포넌트(App.js) 상태 업데이트\n      localStorage.setItem(\"jwt\", token); // 토큰을 localStorage에 저장\n      alert(\"Login successful!\");\n\n      navigate(\"/main\"); // 메인 페이지로 이동\n    } catch (error) {\n      alert(\"Login failed! Please check your ID and Password.\");\n      console.error(error);\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <h1>Login</h1>\n      <input\n        type=\"text\"\n        placeholder=\"ID\"\n        value={loginId}\n        onChange={(e) => setLoginId(e.target.value)}\n      />\n      <input\n        type=\"password\"\n        placeholder=\"Password\"\n        value={password}\n        onChange={(e) => setPassword(e.target.value)}\n      />\n      <button type=\"submit\">Login</button>\n    </form>\n  );\n}\n\nexport default Login;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,SAASC,KAAK,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,KAAKA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAC3B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEhC,MAAMY,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACM,OAAO,EAAEE,QAAQ,CAAC;MAC/C,MAAMO,KAAK,GAAGD,QAAQ,CAACE,IAAI,CAACD,KAAK;MAEjCX,QAAQ,CAACW,KAAK,CAAC,CAAC,CAAC;MACjBE,YAAY,CAACC,OAAO,CAAC,KAAK,EAAEH,KAAK,CAAC,CAAC,CAAC;MACpCI,KAAK,CAAC,mBAAmB,CAAC;MAE1BT,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC;IACrB,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdD,KAAK,CAAC,kDAAkD,CAAC;MACzDE,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACElB,OAAA;IAAMoB,QAAQ,EAAEX,YAAa;IAAAY,QAAA,gBAC3BrB,OAAA;MAAAqB,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACdzB,OAAA;MACE0B,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,IAAI;MAChBC,KAAK,EAAExB,OAAQ;MACfyB,QAAQ,EAAGnB,CAAC,IAAKL,UAAU,CAACK,CAAC,CAACoB,MAAM,CAACF,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7C,CAAC,eACFzB,OAAA;MACE0B,IAAI,EAAC,UAAU;MACfC,WAAW,EAAC,UAAU;MACtBC,KAAK,EAAEtB,QAAS;MAChBuB,QAAQ,EAAGnB,CAAC,IAAKH,WAAW,CAACG,CAAC,CAACoB,MAAM,CAACF,KAAK;IAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACFzB,OAAA;MAAQ0B,IAAI,EAAC,QAAQ;MAAAL,QAAA,EAAC;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChC,CAAC;AAEX;AAACtB,EAAA,CAxCQF,KAAK;EAAA,QAGKJ,WAAW;AAAA;AAAAkC,EAAA,GAHrB9B,KAAK;AA0Cd,eAAeA,KAAK;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}